ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
jpeg("graph.png", width=800, height=600, quality=100)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
jpeg("graph.png", width=1024, height=768, quality=100, res=100)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher()
grapher()
grapher()
grapher()
grapher()
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=7, height=4, quality=100, res=25)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=7, height=4, res=25)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=7, height=4, res=100)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=10, height=7.5, pointsize=20, res=300)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=10, height=4, pointsize=20, res=300)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
png("graph.png", units="in", width=14, height=4, pointsize=20, res=300)
grid.draw(gt)
dev.off()
dev.off()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=14, height=7, pointsize=20, res=300)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=14, height=7, pointsize=20, res=300, antialias="cleartype"))
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=14, height=7, pointsize=20, res=300, antialias="cleartype")
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=14, height=7, pointsize=20, res=300)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
grapher<- function() {
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
for (i in meps_seq) {
list=levels(df.long$locale)[eval(parse(text=i))]
p=ggplot(data=subset(df.long, df.long$locale %in% list),
aes(x=Time, y=RR, colour=locale, group=locale, label=RR))+
scale_y_continuous(breaks=seq(0, 100, 10))+
labs(y="Response Rate")+
coord_cartesian(ylim=c(0, 110))+
geom_line(size=.5)+
geom_point()+
ggtitle("MEPS Response Rates")+
theme(plot.title=element_text(size=18, face="bold", vjust=1),
axis.title=element_text(size=16),
axis.text.x=element_text(size=10, angle=90),
axis.line=element_line(colour="black", size=.2),
legend.background = element_rect(fill="transparent"),
legend.position="top",
legend.title=element_blank(),
legend.margin=unit(-0.6, "cm"),
legend.position="none",
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_line(colour="darkred", size=0.5, linetype="dashed", fill=NA),
panel.background = element_blank(),
panel.grid.major.y=element_line(colour="gray", linetype="solid", size=.2))+ # or theme_blank())
scale_x_date(labels = date_format("%b"), breaks=date_breaks("month"))+
facet_grid(~Year, scales="free", space="free")+
geom_text(aes(Time, RR),vjust=-1, size=4, fontface=2, show_guide=FALSE) #+ #Data labels, fontface=2 is for bold
#geom_text(data=df.long[df$Time=="2014-12-01" & df.long$local %in% "SPOKANE",], aes(label=locale))
gt <- ggplot_gtable(ggplot_build(p)) #Takes existing plot and stores into a gtable (programmable structure)
gt$layout$clip[gt$layout$name == "panel"] <- "off" #Disables clipping
png("graph.png", units="in", width=14, height=7, pointsize=20, res=300)
grid.draw(gt)
dev.off()
#ggsave(my_temp_file<-paste(tempfile(),".jpeg",sep=""), plot=p)
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file="graph.png")
}
}
grapher()
