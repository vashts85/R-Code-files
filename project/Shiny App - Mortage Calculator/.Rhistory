mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
qplot(x=1,y=1)
ggplot() + geom_line(data=dtf, aes(...))
qplot(x=1,y=1)
win.metafile("C:\Users\rcarvalho\Desktop\file name.emf",width=17, height=9) # width and height in inches,
qplot(x=1,y=1)
dev.off()
win.metafile("C:/Users/rcarvalho/Desktop/file name.emf",width=17, height=9) # width and height in inches,
qplot(x=1,y=1)
dev.off()
install.packages('RDCOMClient', repos = 'http://www.omegahat.org/R')
install.packages("R2PPT")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages('RDCOMClient', repos = 'http://www.omegahat.org/R')
install.packages("R2PPT")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R")
install.packages("R2PPT")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages("R2PPT")
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R")
install.packages("C:/Users/rcarvalho/Desktop/RDCOMClient_0.93-0.zip", repos = NULL, lib="C:/Users/rcarvalho/Documents/R/R-3.1.3/library")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
require(RDCOMClient)
install.packages("C:/Users/rcarvalho/Desktop/RDCOMClient_0.93-0.tar.gz", repos = NULL, type = "source", lib="C:/Users/rcarvalho/Documents/R/R-3.1.3/library")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages(c("rscproxy","rcom"),repos="http://rcom.univie.ac.at/download",lib=.Library)
library(rcom)
comRegisterRegistry()
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
require(RDCOMClient)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R")
install.packages("R2PPT")
require(RDCOMClient)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages("R2PPT")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
system.info()
sys.info()
Sys.info()
R.version()
R.Version()
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R")
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R", type = "source")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
installstatconnDCOM()
installstatconnDCOM()
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
require(RDCOMClient)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R", type = "source")
install.packages("R2PPT")
R.Version()
require(RDCOMClient)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages("R2PPT")
require(RDCOMClient)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
require(rcom)
require(RDCOMClient)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
require(rcom)
require(RDCOMClient)
requier(R2PPT)
require(rcom)
require(RDCOMClient)
require(R2PPT)
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R", type = "source")
require(rcom)
require(RDCOMClient)
require(R2PPT)
require(rcom)
require(RDCOMClient)
require(R2PPT)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
require(rcom)
require(RDCOMClient)
require(R2PPT)
library("RDCOMClient", lib.loc="~/R/R-3.1.3/library")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R")
install.packages("C:/Users/rcarvalho/Desktop/RDCOMClient_0.93-0.zip", repos = NULL, lib="C:/Users/rcarvalho/Documents/R/R-3.1.3/library")
require(rcom)
require(RDCOMClient)
require(R2PPT)
install.packages("RDCOMClient", repos = "http://www.omegahat.org/R")
install.packages("RDCOMClient", lib="C:/Users/rcarvalho/Documents/R/R-3.1.3/library")
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
require(rcom)
require(RDCOMClient)
require(R2PPT)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
library(R2PPT)
mypres <- PPT.Init()
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
mypres<-PPT.Init()
mypres<-PPT.Init(method="RDCOMClient")
mypres <- PPT.AddBlankSlide(mypres)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
require(rcom)
require(RDCOMClient)
require(R2PPT)
library(ggplot2)
p <- qplot(x=1,y=1)
print(p)
ggsave(my_temp_file<-paste(tempfile(),".wmf",sep=""), plot=p)
library(R2PPT)
mypres<-PPT.Init(method="RDCOMClient")
mypres <- PPT.AddBlankSlide(mypres)
mypres <- PPT.AddGraphicstoSlide(mypres,file=my_temp_file)
unlink(my_temp_file)
library(slidify)
library(slidifyLibraries)
setwd("C:/Users/rcarvalho/Desktop/R-code-files/project/")
author("Shiny App - Mortage Calculator")
title       : Shiny App - Mortgage Calculator
title       : "Shiny App - Mortgage Calculator"
subtitle    :
---
title       : "Shiny App - Mortgage Calculator"
subtitle    :
author      :
job         :
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      #
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
---
## Read-And-Delete
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides!
--- .class #id
## Slide 2
---
title       : "Shiny App - Mortgage Calculator"
subtitle    :
author      :
job         :
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      #
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
---
## Read-And-Delete
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides!
--- .class #id
## Slide 2
---
title       : Shiny App - Mortgage Calculator
subtitle    :
author      :
job         :
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      #
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
---
## Read-And-Delete
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides!
--- .class #id
## Slide 2
slidify("index.rmd")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
---
title       : Mortgage Payment Calculator
subtitle    : A Shiny app
author      : Ricardo Carvalho
job         :
framework   : slidy        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     :       #
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
---
## Read-And-Delete
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides!
--- .class #id
## Slide 2
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
---
title       : Mortgage Payment Calculator
subtitle    : A Shiny app
author      : Ricardo Carvalho
job         :
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      #
widgets     : [mathjax]            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
--- .class #id
## Shiny App Overview
* This app calculates mortage rates
---
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
framework   : html5slides        # {io2012, html5slides, shower, dzslides, ...}
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.html")
